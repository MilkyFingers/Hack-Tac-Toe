function Board.new 1
push constant 5
call Memory.alloc 1
pop pointer 0
push constant 300
pop this 0
push constant 29
pop this 1
push constant 9
call Array.new 1
pop this 2
push constant 9
call Array.new 1
pop this 3
push constant 9
call Array.new 1
pop this 4
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push constant 9
lt
not
if-goto WHILE_END0
push local 0
push this 3
add
push constant 0
not
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push this 4
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
push this 2
add
push this 0
push constant 30
add
push this 1
push constant 30
add
call Point.new 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push this 2
add
push this 0
push constant 100
add
push this 1
push constant 30
add
call Point.new 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 2
push this 2
add
push this 0
push constant 170
add
push this 1
push constant 30
add
call Point.new 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 3
push this 2
add
push this 0
push constant 30
add
push this 1
push constant 100
add
call Point.new 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 4
push this 2
add
push this 0
push constant 100
add
push this 1
push constant 100
add
call Point.new 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 5
push this 2
add
push this 0
push constant 170
add
push this 1
push constant 100
add
call Point.new 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 6
push this 2
add
push this 0
push constant 30
add
push this 1
push constant 170
add
call Point.new 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 7
push this 2
add
push this 0
push constant 100
add
push this 1
push constant 170
add
call Point.new 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 8
push this 2
add
push this 0
push constant 170
add
push this 1
push constant 170
add
call Point.new 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push pointer 0
call Board.draw 1
pop temp 0
push pointer 0
return
function Board.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function Board.draw 0
push argument 0
pop pointer 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push this 0
push constant 60
add
push this 1
push this 0
push constant 70
add
push this 1
push constant 200
add
call Screen.drawRectangle 4
pop temp 0
push this 0
push constant 130
add
push this 1
push this 0
push constant 140
add
push this 1
push constant 200
add
call Screen.drawRectangle 4
pop temp 0
push this 0
push this 1
push constant 60
add
push this 0
push constant 200
add
push this 1
push constant 70
add
call Screen.drawRectangle 4
pop temp 0
push this 0
push this 1
push constant 130
add
push this 0
push constant 200
add
push this 1
push constant 140
add
call Screen.drawRectangle 4
pop temp 0
push constant 0
return
function Board.drawX 3
push argument 0
pop pointer 0
push argument 1
push this 2
add
pop pointer 1
push that 0
pop local 0
push local 0
call Point.getX 1
pop local 1
push local 0
call Point.getY 1
pop local 2
push local 0
call Point.dispose 1
pop temp 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push local 1
push local 2
push local 1
push constant 20
sub
push local 2
push constant 20
sub
call Screen.drawLine 4
pop temp 0
push local 1
push local 2
push local 1
push constant 20
add
push local 2
push constant 20
sub
call Screen.drawLine 4
pop temp 0
push local 1
push local 2
push local 1
push constant 20
sub
push local 2
push constant 20
add
call Screen.drawLine 4
pop temp 0
push local 1
push local 2
push local 1
push constant 20
add
push local 2
push constant 20
add
call Screen.drawLine 4
pop temp 0
push argument 1
push this 4
add
push constant 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push argument 1
push this 3
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
return
function Board.drawO 3
push argument 0
pop pointer 0
push argument 1
push this 2
add
pop pointer 1
push that 0
pop local 0
push local 0
call Point.getX 1
pop local 1
push local 0
call Point.getY 1
pop local 2
push local 0
call Point.dispose 1
pop temp 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push local 1
push local 2
push constant 25
call Screen.drawCircle 3
pop temp 0
push constant 0
call Screen.setColor 1
pop temp 0
push local 1
push local 2
push constant 24
call Screen.drawCircle 3
pop temp 0
push argument 1
push this 4
add
push constant 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push argument 1
push this 3
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
return
function Board.isCellFree 0
push argument 0
pop pointer 0
push argument 1
push this 3
add
pop pointer 1
push that 0
return
function Board.isFull 2
push argument 0
pop pointer 0
push constant 0
pop local 1
push constant 0
not
pop local 0
label WHILE_EXP0
push local 1
push constant 9
lt
not
if-goto WHILE_END0
push local 1
push this 3
add
pop pointer 1
push that 0
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
pop local 0
label IF_FALSE0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP0
label WHILE_END0
push local 0
return
function Board.isWinner 0
push argument 0
pop pointer 0
push constant 4
push this 4
add
pop pointer 1
push that 0
push constant 1
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 1
push this 4
add
pop pointer 1
push that 0
push constant 1
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 7
push this 4
add
pop pointer 1
push that 0
push constant 1
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 1
return
label IF_FALSE2
label IF_FALSE1
push constant 3
push this 4
add
pop pointer 1
push that 0
push constant 1
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push constant 5
push this 4
add
pop pointer 1
push that 0
push constant 1
eq
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push constant 1
return
label IF_FALSE4
label IF_FALSE3
push constant 0
push this 4
add
pop pointer 1
push that 0
push constant 1
eq
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push constant 8
push this 4
add
pop pointer 1
push that 0
push constant 1
eq
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push constant 1
return
label IF_FALSE6
label IF_FALSE5
push constant 2
push this 4
add
pop pointer 1
push that 0
push constant 1
eq
if-goto IF_TRUE7
goto IF_FALSE7
label IF_TRUE7
push constant 6
push this 4
add
pop pointer 1
push that 0
push constant 1
eq
if-goto IF_TRUE8
goto IF_FALSE8
label IF_TRUE8
push constant 1
return
label IF_FALSE8
label IF_FALSE7
label IF_FALSE0
push constant 0
push this 4
add
pop pointer 1
push that 0
push constant 1
eq
if-goto IF_TRUE9
goto IF_FALSE9
label IF_TRUE9
push constant 1
push this 4
add
pop pointer 1
push that 0
push constant 1
eq
if-goto IF_TRUE10
goto IF_FALSE10
label IF_TRUE10
push constant 2
push this 4
add
pop pointer 1
push that 0
push constant 1
eq
if-goto IF_TRUE11
goto IF_FALSE11
label IF_TRUE11
push constant 1
return
label IF_FALSE11
label IF_FALSE10
push constant 3
push this 4
add
pop pointer 1
push that 0
push constant 1
eq
if-goto IF_TRUE12
goto IF_FALSE12
label IF_TRUE12
push constant 6
push this 4
add
pop pointer 1
push that 0
push constant 1
eq
if-goto IF_TRUE13
goto IF_FALSE13
label IF_TRUE13
push constant 1
return
label IF_FALSE13
label IF_FALSE12
label IF_FALSE9
push constant 8
push this 4
add
pop pointer 1
push that 0
push constant 1
eq
if-goto IF_TRUE14
goto IF_FALSE14
label IF_TRUE14
push constant 7
push this 4
add
pop pointer 1
push that 0
push constant 1
eq
if-goto IF_TRUE15
goto IF_FALSE15
label IF_TRUE15
push constant 6
push this 4
add
pop pointer 1
push that 0
push constant 1
eq
if-goto IF_TRUE16
goto IF_FALSE16
label IF_TRUE16
push constant 1
return
label IF_FALSE16
label IF_FALSE15
push constant 5
push this 4
add
pop pointer 1
push that 0
push constant 1
eq
if-goto IF_TRUE17
goto IF_FALSE17
label IF_TRUE17
push constant 2
push this 4
add
pop pointer 1
push that 0
push constant 1
eq
if-goto IF_TRUE18
goto IF_FALSE18
label IF_TRUE18
push constant 1
return
label IF_FALSE18
label IF_FALSE17
label IF_FALSE14
push constant 4
push this 4
add
pop pointer 1
push that 0
push constant 2
eq
if-goto IF_TRUE19
goto IF_FALSE19
label IF_TRUE19
push constant 1
push this 4
add
pop pointer 1
push that 0
push constant 2
eq
if-goto IF_TRUE20
goto IF_FALSE20
label IF_TRUE20
push constant 7
push this 4
add
pop pointer 1
push that 0
push constant 2
eq
if-goto IF_TRUE21
goto IF_FALSE21
label IF_TRUE21
push constant 2
return
label IF_FALSE21
label IF_FALSE20
push constant 3
push this 4
add
pop pointer 1
push that 0
push constant 2
eq
if-goto IF_TRUE22
goto IF_FALSE22
label IF_TRUE22
push constant 5
push this 4
add
pop pointer 1
push that 0
push constant 2
eq
if-goto IF_TRUE23
goto IF_FALSE23
label IF_TRUE23
push constant 2
return
label IF_FALSE23
label IF_FALSE22
push constant 0
push this 4
add
pop pointer 1
push that 0
push constant 2
eq
if-goto IF_TRUE24
goto IF_FALSE24
label IF_TRUE24
push constant 8
push this 4
add
pop pointer 1
push that 0
push constant 2
eq
if-goto IF_TRUE25
goto IF_FALSE25
label IF_TRUE25
push constant 2
return
label IF_FALSE25
label IF_FALSE24
push constant 2
push this 4
add
pop pointer 1
push that 0
push constant 2
eq
if-goto IF_TRUE26
goto IF_FALSE26
label IF_TRUE26
push constant 6
push this 4
add
pop pointer 1
push that 0
push constant 2
eq
if-goto IF_TRUE27
goto IF_FALSE27
label IF_TRUE27
push constant 2
return
label IF_FALSE27
label IF_FALSE26
label IF_FALSE19
push constant 0
push this 4
add
pop pointer 1
push that 0
push constant 2
eq
if-goto IF_TRUE28
goto IF_FALSE28
label IF_TRUE28
push constant 1
push this 4
add
pop pointer 1
push that 0
push constant 2
eq
if-goto IF_TRUE29
goto IF_FALSE29
label IF_TRUE29
push constant 2
push this 4
add
pop pointer 1
push that 0
push constant 2
eq
if-goto IF_TRUE30
goto IF_FALSE30
label IF_TRUE30
push constant 2
return
label IF_FALSE30
label IF_FALSE29
push constant 3
push this 4
add
pop pointer 1
push that 0
push constant 2
eq
if-goto IF_TRUE31
goto IF_FALSE31
label IF_TRUE31
push constant 6
push this 4
add
pop pointer 1
push that 0
push constant 2
eq
if-goto IF_TRUE32
goto IF_FALSE32
label IF_TRUE32
push constant 2
return
label IF_FALSE32
label IF_FALSE31
label IF_FALSE28
push constant 8
push this 4
add
pop pointer 1
push that 0
push constant 2
eq
if-goto IF_TRUE33
goto IF_FALSE33
label IF_TRUE33
push constant 7
push this 4
add
pop pointer 1
push that 0
push constant 2
eq
if-goto IF_TRUE34
goto IF_FALSE34
label IF_TRUE34
push constant 6
push this 4
add
pop pointer 1
push that 0
push constant 2
eq
if-goto IF_TRUE35
goto IF_FALSE35
label IF_TRUE35
push constant 2
return
label IF_FALSE35
label IF_FALSE34
push constant 5
push this 4
add
pop pointer 1
push that 0
push constant 2
eq
if-goto IF_TRUE36
goto IF_FALSE36
label IF_TRUE36
push constant 2
push this 4
add
pop pointer 1
push that 0
push constant 2
eq
if-goto IF_TRUE37
goto IF_FALSE37
label IF_TRUE37
push constant 2
return
label IF_FALSE37
label IF_FALSE36
label IF_FALSE33
push pointer 0
call Board.isFull 1
if-goto IF_TRUE38
goto IF_FALSE38
label IF_TRUE38
push constant 1
neg
return
goto IF_END38
label IF_FALSE38
push constant 0
return
label IF_END38
